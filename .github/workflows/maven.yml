# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven
env:
  ALLURE_VERSION: "2.10.0"
  SUREFIRE_ARGS: "--add-opens java.base/java.lang=ALL-UNNAMED"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  repository_dispatch:
    types:
      - webhook

jobs:
  build:
    name: Tests on JDK
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        java: [ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          java-package: jdk
          distribution: 'zulu'
          cache: 'maven'

      - name: Build with Maven
        id: build
        run: mvn clean install -DskipTests -ntp

      - name: Start Selenoid
        uses: Xotabu4/selenoid-github-action@v2
        id: start-selenoid
        if: github.event_name == 'pull_request' && success()
        with:
          selenoid-start-arguments: |
            --args "-timeout 60s -limit 5"

      - name: Check Selenoid has been started
        run: curl http://localhost:4444/status

      - name: Tests
        id: functests
        timeout-minutes: 10
        run: mvn test -Pci -ntp

      - name: Get Allure history
        uses: actions/checkout@v2
        id: allure-setup
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generate Allure report
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: target/allure-results
          allure_report: target/allure-report
          allure_history: allure-history

      - name: Upload Allure report
        uses: actions/upload-artifact@master
        with:
          name: Allure report
          path: target/allure-report

      - name: Deploy Allure report to Github Pages
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

      - name: Check tests are passed
        if: ${{ steps.functests.outcome != 'success' }}
        run: |
          echo Tests result: ${{ steps.functests.outcome }}
          exit 1